{"version":3,"sources":["components/section/Section.js","components/feedback-options/FeedbackOptions.js","components/list-statistics/ListStatistics.js","components/notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onIncrementFeedback","options","map","option","type","onClick","ListStatistics","good","neutral","bad","total","positiveFeedbackPercentage","Notification","message","App","state","feedback","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAWeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MCKMC,EARS,SAAC,GAAD,IAAEC,EAAF,EAAEA,oBAAqBC,EAAvB,EAAuBA,QAAvB,OACpB,8BACKA,EAAQC,KAAI,SAAAC,GAAM,OACf,wBAAqBC,KAAK,SAASC,QAAS,kBAAML,EAAoBG,IAAtE,SAAgFA,GAAnEA,SCiBVG,EAtBQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,2BAA7B,OACnB,mCACI,+BACI,+BACI,sCAAY,+BAAOJ,OAEvB,+BACI,yCAAe,+BAAOC,OAE1B,+BACI,qCAAW,+BAAOC,OAEtB,+BACI,uCAAa,+BAAOC,OAExB,+BACI,mDAAyB,+BAAOC,aCZjCC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KCsDOC,E,4MA/CXC,MAAQ,CACJR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTT,oBAAsB,SAACgB,GACnB,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAWE,EAAUF,GAAY,O,4CAO1C,WACI,MAA+BG,KAAKJ,MAA5BR,EAAR,EAAQA,KACFa,EAAqBb,EAD3B,EAAcC,QAAd,EAAuBC,IAEjBY,EAAkCC,KAAKC,MAC5ChB,EAAOa,EAAsB,KACxBnB,EAAUuB,OAAOC,KAAKN,KAAKJ,OAEjC,OACA,qCACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACM,cAAC,EAAD,CACIG,oBAAqBmB,KAAKnB,oBAC1BC,QAASA,MAGb,cAAC,EAAD,CAASJ,MAAM,aAAf,SACKuB,EAAqB,EAClB,cAAC,EAAD,CACIb,KAAMY,KAAKJ,MAAMR,KACjBC,QAASW,KAAKJ,MAAMP,QACpBC,IAAKU,KAAKJ,MAAMN,IAChBC,MAAOU,EACPT,2BAA4BU,IAEhC,cAAC,EAAD,CAAcR,QAAQ,+B,GAzC5Ba,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86fbc6bb.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n)\r\n\r\nexport default Section;","import React from 'react';\r\n\r\n\r\n\r\nconst FeedbackOptions = ({onIncrementFeedback, options}) => (\r\n    <div>\r\n        {options.map(option => (\r\n            <button key={option} type=\"button\" onClick={() => onIncrementFeedback(option)}>{option}</button>))}\r\n        \r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nconst ListStatistics = ({good, neutral, bad, total, positiveFeedbackPercentage}) => (\r\n    <>\r\n        <ul>\r\n            <li>\r\n                <p>Good:</p><span>{good}</span>\r\n            </li>\r\n            <li>\r\n                <p>Neutral:</p><span>{neutral}</span>\r\n            </li>\r\n            <li>\r\n                <p>Bad:</p><span>{bad}</span>\r\n            </li>\r\n            <li>\r\n                <p>Total:</p><span>{total}</span>\r\n            </li>\r\n            <li>\r\n                <p>Positive feedback:</p><span>{positiveFeedbackPercentage}</span>\r\n            </li>\r\n        </ul>\r\n        </>\r\n);\r\n\r\nexport default ListStatistics;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nexport default Notification;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport Section from './components/section';\nimport FeedbackOptions from \"./components/feedback-options\";\nimport ListStatistics from \"./components/list-statistics\";\nimport Notification from \"./components/notification\";\n\n\nclass App extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n    onIncrementFeedback = (feedback) => {\n        this.setState(prevState => ({\n            [feedback]: prevState[feedback] + 1,\n        }));\n    };\n\n    \n\n    \n    render() {\n        const { good, neutral, bad } = this.state;\n        const countTotalFeedback = good + neutral + bad;\n        const countPositiveFeedbackPercentage = Math.round(\n        (good / countTotalFeedback) * 100,);\n        const options = Object.keys(this.state);\n\n        return (\n        <>\n          <Section title=\"Please leave feedback\">\n                <FeedbackOptions\n                    onIncrementFeedback={this.onIncrementFeedback}\n                    options={options}\n                />\n          </Section>\n                <Section title=\"Statistics\">\n                    {countTotalFeedback > 0 ?(\n                        <ListStatistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={countTotalFeedback}\n                            positiveFeedbackPercentage={countPositiveFeedbackPercentage}\n                        />\n                    ): (<Notification message=\"No feedback given\"/>)} \n          </Section>\n    </>\n    )\n    };\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}