{"version":3,"sources":["components/section/Section.js","components/feedback-options/FeedbackOptions.js","components/list-statistics/ListStatistics.js","components/notification/Notification.js","App.js","index.js","components/section/section.module.css","components/feedback-options/feedback-options.module.css","components/list-statistics/listStatistics.module.css"],"names":["Section","title","children","className","styles","section","FeedbackOptions","onIncrementFeedback","options","buttonContainer","map","option","type","onClick","ListStatistics","good","neutral","bad","total","positiveFeedbackPercentage","listStatistics","Notification","message","App","state","feedback","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAkBeA,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,0BAASC,UAAWC,IAAOC,QAA3B,UACI,6BAAKJ,IACJC,M,gBCKMI,EARS,SAAC,GAAD,IAAEC,EAAF,EAAEA,oBAAqBC,EAAvB,EAAuBA,QAAvB,OACpB,qBAAKL,UAAWC,IAAOK,gBAAvB,SACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAAqBC,KAAK,SAASC,QAAS,kBAAMN,EAAoBI,IAAtE,SAAgFA,GAAnEA,S,gBCiBVG,EAtBQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,2BAA7B,OACnB,mCACI,qBAAIhB,UAAWC,IAAOgB,eAAtB,UACI,+BACI,sCAAY,+BAAOL,OAEvB,+BACI,yCAAe,+BAAOC,OAE1B,+BACI,qCAAW,+BAAOC,OAEtB,+BACI,uCAAa,+BAAOC,OAExB,+BACI,mDAAyB,+BAAOC,aCRjCE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KCoEOC,G,kNA/CXC,MAAQ,CACJT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTV,oBAAsB,SAACkB,GACnB,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAWE,EAAUF,GAAY,O,4CAO1C,WACI,MAA+BG,KAAKJ,MAA5BT,EAAR,EAAQA,KACFc,EAAqBd,EAD3B,EAAcC,QAAd,EAAuBC,IAEjBa,EAAkCC,KAAKC,MAC5CjB,EAAOc,EAAsB,KACxBrB,EAAUyB,OAAOC,KAAKN,KAAKJ,OAEjC,OACA,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACM,cAAC,EAAD,CACIM,oBAAqBqB,KAAKrB,oBAC1BC,QAASA,MAGb,cAAC,EAAD,CAASP,MAAM,aAAf,SACK4B,EAAqB,EAClB,cAAC,EAAD,CACId,KAAMa,KAAKJ,MAAMT,KACjBC,QAASY,KAAKJ,MAAMR,QACpBC,IAAKW,KAAKJ,MAAMP,IAChBC,MAAOW,EACPV,2BAA4BW,IAEhC,cAAC,EAAD,CAAcR,QAAQ,+B,GAvD5Ba,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,gBAAkB,4C,kBCApCD,EAAOC,QAAU,CAAC,eAAiB,0C","file":"static/js/main.04289e4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.css'\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className={styles.section}>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n)\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styles from \"./feedback-options.module.css\"\r\n\r\n\r\n\r\nconst FeedbackOptions = ({onIncrementFeedback, options}) => (\r\n    <div className={styles.buttonContainer}>\r\n        {options.map(option => (\r\n            <button key={option} type=\"button\" onClick={() => onIncrementFeedback(option)}>{option}</button>))}\r\n        \r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from \"./listStatistics.module.css\"\r\n\r\nconst ListStatistics = ({good, neutral, bad, total, positiveFeedbackPercentage}) => (\r\n    <>\r\n        <ul className={styles.listStatistics}>\r\n            <li>\r\n                <p>Good:</p><span>{good}</span>\r\n            </li>\r\n            <li>\r\n                <p>Neutral:</p><span>{neutral}</span>\r\n            </li>\r\n            <li>\r\n                <p>Bad:</p><span>{bad}</span>\r\n            </li>\r\n            <li>\r\n                <p>Total:</p><span>{total}</span>\r\n            </li>\r\n            <li>\r\n                <p>Positive feedback:</p><span>{positiveFeedbackPercentage}</span>\r\n            </li>\r\n        </ul>\r\n        </>\r\n);\r\n\r\nexport default ListStatistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Section from './components/section';\nimport FeedbackOptions from \"./components/feedback-options\";\nimport ListStatistics from \"./components/list-statistics\";\nimport Notification from \"./components/notification\";\nimport './base-style.module.css';\n\n\nclass App extends Component {\n\n    \n    static propTypes = {\n        title: PropTypes.string,\n        onIncrementFeedback: PropTypes.func.isRequired,\n        options: PropTypes.object.isRequired,\n        good: PropTypes.number.isRequired,\n        neutral: PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n        positiveFeedbackPercentage: PropTypes.func.isRequired,\n    };\n\n    \n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n    onIncrementFeedback = (feedback) => {\n        this.setState(prevState => ({\n            [feedback]: prevState[feedback] + 1,\n        }));\n    };\n\n    \n\n    \n    render() {\n        const { good, neutral, bad } = this.state;\n        const countTotalFeedback = good + neutral + bad;\n        const countPositiveFeedbackPercentage = Math.round(\n        (good / countTotalFeedback) * 100,);\n        const options = Object.keys(this.state);\n\n        return (\n        <>\n          <Section title=\"Please leave feedback\">\n                <FeedbackOptions\n                    onIncrementFeedback={this.onIncrementFeedback}\n                    options={options}\n                />\n          </Section>\n                <Section title=\"Statistics\">\n                    {countTotalFeedback > 0 ?(\n                        <ListStatistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={countTotalFeedback}\n                            positiveFeedbackPercentage={countPositiveFeedbackPercentage}\n                        />\n                    ): (<Notification message=\"No feedback given\"/>)} \n          </Section>\n    </>\n    )\n    };\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1IJK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"feedback-options_buttonContainer__16WdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStatistics\":\"listStatistics_listStatistics__1bCuR\"};"],"sourceRoot":""}